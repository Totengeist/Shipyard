name: releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      refToBuild:
        description: 'Tag to build'
        type: string

env:
  TAG: ${{ inputs.refToBuild || github.ref_name }}

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ env.TAG }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: latest
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json

    - name: Validate composer.json and composer.lock
      run: composer validate --strict --no-check-version
      working-directory: ./backend

    - name: Install backend dependencies
      run: |
        composer remove --dev fakerphp/faker laracasts/testdummy phpunit/phpunit mikey179/vfsstream
        composer install --prefer-dist --no-progress --no-suggest --no-dev
      working-directory: ./backend

    - name: Install frontend dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Run frontend builder
      run: npm run build
      working-directory: ./frontend

    - name: Build release archive
      run: |
        ls -lha
        >COMMIT git log -1 --pretty=format:"%h"
        mv COMMIT backend/
        cp frontend/dist/frontend/browser/*.{js,css,map,html} backend/src/public/
        cp README.md backend/
        cp LICENSE backend/
        cp CHANGELOG.md backend/
        pushd backend
        zip -r shipyard-${{ inputs.refToBuild || github.ref_name }}.zip vendor/ src/ .env.example composer.json README.md LICENSE CHANGELOG.md COMMIT
        popd

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: shipyard-release
        path: "backend/shipyard-${{ inputs.refToBuild || github.ref_name }}.zip"
        retention-days: 5

    - name: Update release
      uses: ncipollo/release-action@main
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "backend/shipyard-${{ inputs.refToBuild || github.ref_name }}.zip"
        tag: ${{ env.TAG }}
        name: "ðŸ“¦ Release ${{ env.TAG }}"
        allowUpdates: false
        artifactErrorsFailBuild: true
        draft: true
        prerelease: false

  deploy:
    name: Deploy Release
    runs-on: ubuntu-22.04
    needs: build

    steps:
    - name: Download a single artifact
      uses: actions/download-artifact@v4
      with:
        name: shipyard-release

    - name: Extract archive
      run: |
        shopt -s extglob
        unzip shipyard-${{ inputs.refToBuild || github.ref_name }}.zip
        rm shipyard-${{ inputs.refToBuild || github.ref_name }}.zip
        var=$(cat COMMIT)
        mkdir $var
        mv -v !($var) $var

    - name: Deploy
      uses: burnett01/rsync-deployments@7.0.2
      with:
        switches: -avzrO --no-perms --delete
        path: .
        remote_path: ${{ secrets.DEPLOY_PATH }}
        remote_host: ${{ secrets.DEPLOY_HOST }}
        remote_port: ${{ secrets.DEPLOY_PORT }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key: ${{ secrets.DEPLOY_KEY }}