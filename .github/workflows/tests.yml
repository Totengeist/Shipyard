name: tests

on: [push, pull_request]

jobs:
  build:
    name: PHP ${{ matrix.php }} on ${{ matrix.runner }}
    runs-on: ${{ matrix.runner }}

    defaults:
      run:
        working-directory: ./backend

    env:
      APP_TITLE: Shipyard
      BASE_URL: /
      LOG_LEVEL: OFF
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: shipyard
      DB_USERNAME: root
      DB_PASSWORD: root

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_DATABASE: shipyard
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
        fail-fast: true
        matrix:
            php: ['7.2', '7.3', '7.4', '8.2']
            runner: ['ubuntu-20.04', 'ubuntu-22.04']

    steps:
    - uses: actions/checkout@v3

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: mysql

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Restore Composer Cache Directory
      id: composer-cache-restore
      run: |
        echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    - uses: actions/cache/restore@v3
      with:
        path: ${{ steps.composer-cache-restore.outputs.dir }}
        key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest
      if: ${{ matrix.php != '8.2' }}

    - name: Install dependencies (PHP 8.2)
      run: composer install --prefer-dist --no-progress --no-suggest --ignore-platform-reqs
      if: ${{ matrix.php == '8.2' }}

    - name: Save Composer Cache Directory
      uses: actions/cache/save@v3
      with:
        path: ${{ steps.composer-cache-restore.outputs.dir }}
        key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ steps.composer-cache-restore-restore.outputs.cache-primary-key }}
        restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-

    - name: Start MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -h 127.0.0.1 --port 3306 -u root -proot -e 'CREATE DATABASE IF NOT EXISTS shipyard;'

    - name: Use mysql_native_password (PHP 7.2 & 7.3)
      run: |
        mysql -h 127.0.0.1 --port 3306 -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"
      if: ${{ matrix.php == '7.2' || matrix.php == '7.3' }}

    - name: Run Migration
      run: php src/public/install/index.php

    - name: Run test suite
      run: composer test
      if: ${{ matrix.php != '7.4' &&  matrix.runner != 'ubuntu-22.04' }}

    - name: Run test suite
      run: vendor/bin/phpunit --verbose --coverage-clover ./coverage.xml
      if: ${{ matrix.php == '7.4' && matrix.runner == 'ubuntu-22.04' }}
      env:
        XDEBUG_MODE: coverage

    - name: Upload to Codecov
      uses: codecov/codecov-action@v2
      if: ${{ matrix.php == '7.4' && matrix.runner == 'ubuntu-22.04' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./backend/coverage.xml
        verbose: true
